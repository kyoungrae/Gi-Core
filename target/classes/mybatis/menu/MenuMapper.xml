<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gicore.common.common.menu.MenuMapper">
    <sql id="sortFilter">
        ORDER BY
        <choose>
            <when test="sort_id == 'no'">
                system_create_date ${sort_order}
            </when>
            <when test="sort_id != null and sort_id.endsWith('code_name')">
                ${sort_id.replace('_name', '')} ${sort_order}
            </when>
            <when test="sort_id != null and sort_id != null">
                ${sort_id} ${sort_order}
            </when>
            <otherwise>
                system_create_date DESC
            </otherwise>
        </choose>
    </sql>
    <select id="SELECT_PAGE" resultType="com.gicore.common.common.menu.Menu">
        SELECT * FROM(
            SELECT
                rownum AS no,
                menu_code,
                menu_name,
                menu_number,
                menu_level,
                top_menu_code,
                url,
                use_yn,
                system_create_userid,
                system_update_userid,
                TO_DATE(TO_CHAR(system_update_date,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd HH24:MI:SS') AS system_update_date,
                TO_DATE(TO_CHAR(system_create_date,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd HH24:MI:SS') AS system_create_date
            FROM COMMON_MENU
            <where>
                1=1
                <if test="menu_code != null and menu_code != '' ">AND menu_code = #{menu_code}</if>
                <if test="menu_name != null and menu_name != '' ">AND menu_name = #{menu_name}</if>
                <if test="menu_number != null and menu_number != '' ">AND menu_number = #{menu_number}</if>
                <if test="menu_level != null and menu_level != '' ">AND menu_level = #{menu_level}</if>
                <if test="top_menu_code != null and top_menu_code != '' ">AND top_menu_code = #{top_menu_code}</if>
                <if test="url != null and url != '' ">AND url = #{url}</if>
                <if test="use_yn != null and use_yn != '' ">AND use_yn = #{use_yn}</if>
                <if test="system_create_userid != null and system_create_userid != '' ">AND system_create_userid = #{system_create_userid}</if>
                <if test="system_update_userid != null and system_update_userid != '' ">AND system_update_userid = #{system_update_userid}</if>
            </where>
            ORDER BY menu_sequence ASC
        )
        <where>
            no BETWEEN ((#{page_no} -1) * #{row_range} + 1) AND (#{row_range} * #{page_no})
        </where>
    </select>

    <select id="SELECT_PAGING_TOTAL_NUMBER" resultType="int">
        SELECT CEIL(COUNT(*)/#{row_range}) FROM COMMON_MENU
        <where>
            1=1
            <if test="menu_code != null and menu_code != '' ">AND menu_code = #{menu_code}</if>
            <if test="menu_name != null and menu_name != '' ">AND menu_name = #{menu_name}</if>
            <if test="menu_number != null and menu_number != '' ">AND menu_number = #{menu_number}</if>
            <if test="menu_level != null and menu_level != '' ">AND menu_level = #{menu_level}</if>
            <if test="top_menu_code != null and top_menu_code != '' ">AND top_menu_code = #{top_menu_code}</if>
            <if test="url != null and url != '' ">AND url = #{url}</if>
            <if test="use_yn != null and use_yn != '' ">AND use_yn = #{use_yn}</if>
            <if test="system_create_userid != null and system_create_userid != '' ">AND system_create_userid = #{system_create_userid}</if>
            <if test="system_update_userid != null and system_update_userid != '' ">AND system_update_userid = #{system_update_userid}</if>
        </where>
    </select>

    <select id="SELECT" resultType="com.gicore.common.common.menu.Menu">
        SELECT
            rownum AS no,
            menu_code,
            menu_name,
            menu_number,
            menu_level,
            top_menu_code,
            url,
            use_yn,
            system_create_userid,
            system_update_userid,
            TO_DATE(TO_CHAR(system_update_date,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd HH24:MI:SS') AS system_update_date,
            TO_DATE(TO_CHAR(system_create_date,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd HH24:MI:SS') AS system_create_date
        FROM COMMON_MENU
        <where>
            1=1
            <if test="menu_code != null and menu_code != '' ">AND menu_code = #{menu_code}</if>
            <if test="menu_name != null and menu_name != '' ">AND menu_name = #{menu_name}</if>
            <if test="menu_number != null and menu_number != '' ">AND menu_number = #{menu_number}</if>
            <if test="menu_level != null and menu_level != '' ">AND menu_level = #{menu_level}</if>
            <if test="top_menu_code != null and top_menu_code != '' ">AND top_menu_code = #{top_menu_code}</if>
            <if test="url != null and url != '' ">AND url = #{url}</if>
            <if test="use_yn != null and use_yn != '' ">AND use_yn = #{use_yn}</if>
            <if test="system_create_userid != null and system_create_userid != '' ">AND system_create_userid = #{system_create_userid}</if>
            <if test="system_update_userid != null and system_update_userid != '' ">AND system_update_userid = #{system_update_userid}</if>
        </where>
            ORDER BY MENU_SEQUENCE ASC ,MENU_NUMBER ASC
    </select>
    <select id="SELECT_HIERARCHY" resultType="com.gicore.common.common.menu.Menu">
        SELECT
        rownum AS no,
        menu_code,
        menu_name,
        menu_number,
        menu_level,
        top_menu_code,
        url,
        use_yn,
        fn_get_common_code_name('use_yn', use_yn) as use_yn_name,
        menu_sequence,
        system_create_userid,
        system_update_userid,
        TO_DATE(TO_CHAR(system_update_date,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd HH24:MI:SS') AS system_update_date,
        TO_DATE(TO_CHAR(system_create_date,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd HH24:MI:SS') AS system_create_date
        FROM COMMON_MENU
        <where>
            1=1
            <if test="menu_code != null and menu_code != '' ">AND menu_code = #{menu_code}</if>
            <if test="menu_name != null and menu_name != '' ">AND menu_name = #{menu_name}</if>
            <if test="menu_number != null and menu_number != '' ">AND menu_number = #{menu_number}</if>
            <if test="menu_level != null and menu_level != '' ">AND menu_level = #{menu_level}</if>
            <if test="top_menu_code != null and top_menu_code != '' ">AND top_menu_code = #{top_menu_code}</if>
            <if test="url != null and url != '' ">AND url = #{url}</if>
            <if test="use_yn != null and use_yn != '' ">AND use_yn = #{use_yn}</if>
            <if test="system_create_userid != null and system_create_userid != '' ">AND system_create_userid = #{system_create_userid}</if>
            <if test="system_update_userid != null and system_update_userid != '' ">AND system_update_userid = #{system_update_userid}</if>
        </where>
        <include refid="sortFilter"/>
    </select>

    <select id="SELECT_HIERARCHY_WITH_ACCESS_RIGHT_GROUP" resultType="com.gicore.common.common.menu.Menu">
        SELECT
        rownum AS no,
        subquery.*
        FROM (
        SELECT
        cm.menu_code,
        cm.menu_name,
        cm.menu_number,
        cm.menu_level,
        cm.top_menu_code,
        cm.url,
        cm.use_yn,
        fn_get_common_code_name('use_yn', cm.use_yn) as use_yn_name,
        cm.menu_sequence,
        cm.system_create_userid,
        cm.system_update_userid,
        TO_DATE(TO_CHAR(cm.system_update_date, 'yyyy-MM-dd HH24:MI:SS'), 'yyyy-MM-dd HH24:MI:SS') AS system_update_date,
        TO_DATE(TO_CHAR(cm.system_create_date, 'yyyy-MM-dd HH24:MI:SS'), 'yyyy-MM-dd HH24:MI:SS') AS system_create_date,
        LISTAGG(group_info, ',') WITHIN GROUP (ORDER BY group_level, group_id) AS access_right_group
        FROM
        COMMON_MENU cm
        LEFT JOIN (
        SELECT DISTINCT
        cagml.MENU_CODE,
        CASE
        WHEN cg.GROUP_LEVEL = 1 THEN
        '{"group_id":"' || cg.GROUP_ID || '",'
        || '"group_name":"' || cg.GROUP_NAME || '",'
        || '"top_group_id":"' || cg.TOP_GROUP_ID || '",'
        || '"group_level":"' || cg.GROUP_LEVEL || '"}'
        ELSE
        '{"group_id":"' || cg.GROUP_ID || '",'
        || '"group_name":"' || cg.GROUP_NAME || '",'
        || '"top_group_id":"' || cg.TOP_GROUP_ID || '",'
        || '"group_level":"' || cg.GROUP_LEVEL || '"}'
        END AS group_info,
        cg.GROUP_LEVEL,
        cg.GROUP_ID
        FROM
        COMMON_ACCESS_GROUP_MENU_LIST cagml
        JOIN COMMON_GROUP cg ON cagml.ACCESS_RIGHTS_GROUP_ID = cg.GROUP_ID
        UNION
        SELECT DISTINCT
        cagml.MENU_CODE,
        '{"group_id":"' || cg_top.GROUP_ID || '",'
        || '"group_name":"' || cg_top.GROUP_NAME || '",'
        || '"top_group_id":"' || cg_top.TOP_GROUP_ID || '",'
        || '"group_level":"' || cg_top.GROUP_LEVEL || '"}' AS group_info,
        cg_top.GROUP_LEVEL,
        cg_top.GROUP_ID
        FROM
        COMMON_ACCESS_GROUP_MENU_LIST cagml
        JOIN COMMON_GROUP cg ON cagml.ACCESS_RIGHTS_GROUP_ID = cg.GROUP_ID
        JOIN COMMON_GROUP cg_top ON cg.TOP_GROUP_ID = cg_top.GROUP_ID
        WHERE
        cg.GROUP_LEVEL = 1 AND cg_top.GROUP_LEVEL = 0
        ) access_groups ON cm.menu_code = access_groups.MENU_CODE
        <where>
            1=1
            <if test="menu_code != null and menu_code != '' ">AND cm.menu_code = #{menu_code}</if>
            <if test="menu_name != null and menu_name != '' ">AND cm.menu_name = #{menu_name}</if>
            <if test="menu_number != null and menu_number != '' ">AND cm.menu_number = #{menu_number}</if>
            <if test="menu_level != null and menu_level != '' ">AND cm.menu_level = #{menu_level}</if>
            <if test="top_menu_code != null and top_menu_code != '' ">AND cm.top_menu_code = #{top_menu_code}</if>
            <if test="url != null and url != '' ">AND cm.url = #{url}</if>
            <if test="use_yn != null and use_yn != '' ">AND cm.use_yn = #{use_yn}</if>
            <if test="system_create_userid != null and system_create_userid != '' ">AND cm.system_create_userid = #{system_create_userid}</if>
            <if test="system_update_userid != null and system_update_userid != '' ">AND cm.system_update_userid = #{system_update_userid}</if>
        </where>
        GROUP BY
        cm.menu_code,
        cm.menu_name,
        cm.menu_number,
        cm.menu_level,
        cm.top_menu_code,
        cm.url,
        cm.use_yn,
        cm.menu_sequence,
        cm.system_create_userid,
        cm.system_update_userid,
        cm.system_update_date,
        cm.system_create_date
        ORDER BY
        cm.menu_sequence ASC,
        cm.top_menu_code ASC,
        cm.menu_number ASC,
        cm.top_menu_code ASC
        ) subquery

    </select>

    <insert id="INSERT">
        INSERT INTO COMMON_MENU(

         menu_code
        , menu_name
        , menu_number
        , menu_level
        , url
        , use_yn
        , system_create_date
        , system_create_userid
        <if test="top_menu_code != null">, top_menu_code</if>
        <if test="system_update_date != null">, system_update_date</if>
        <if test="system_update_userid != null">, system_update_userid</if>
        <if test="menu_sequence != null">, menu_sequence</if>
        )
        VALUES(

        #{menu_code}
        , #{menu_name}
        , #{menu_number}
        , #{menu_level}
        , #{url}
        , #{use_yn}
        , systimestamp
        , #{system_create_userid}
        <if test="top_menu_code != null">, #{top_menu_code}</if>
        <if test="system_update_date != null">, #{system_update_date}</if>
        <if test="system_update_userid != null">, #{system_update_userid}</if>
        <if test="menu_sequence != null">, #{menu_sequence}</if>
        )
    </insert>

    <delete id="DELETE">
        DELETE FROM COMMON_MENU
        <where>
            menu_code = #{menu_code}
            <if test="menu_name != null">AND menu_name = #{menu_name}</if>
            <if test="menu_number != null">AND menu_number = #{menu_number}</if>
            <if test="menu_level != null">AND menu_level = #{menu_level}</if>
            <if test="top_menu_code != null">AND top_menu_code = #{top_menu_code}</if>
            <if test="url != null">AND url = #{url}</if>
            <if test="use_yn != null">AND use_yn = #{use_yn}</if>
            <if test="system_create_date != null">AND system_create_date = #{system_create_date}</if>
            <if test="system_create_userid != null">AND system_create_userid = #{system_create_userid}</if>
            <if test="system_update_date != null">AND system_update_date = #{system_update_date}</if>
            <if test="system_update_userid != null">AND system_update_userid = #{system_update_userid}</if>
            <if test="menu_sequence != null">AND menu_sequence = #{menu_sequence}</if>
        </where>
    </delete>

    <update id="UPDATE">
        UPDATE  COMMON_MENU
        <set>

            <if test="menu_name != null">, menu_name=#{menu_name}</if>
            <if test="menu_number != null">, menu_number=#{menu_number}</if>
            <if test="menu_level != null">, menu_level=#{menu_level}</if>
            <if test="top_menu_code != null">, top_menu_code=#{top_menu_code}</if>
            <if test="url != null">, url=#{url}</if>
            <if test="use_yn != null">, use_yn=#{use_yn}</if>
            <if test="system_create_date != null">, system_create_date=#{system_create_date}</if>
            <if test="system_create_userid != null">, system_create_userid=#{system_create_userid}</if>
            <if test="system_update_date != null">, system_update_date=#{system_update_date}</if>
            <if test="system_update_userid != null">, system_update_userid=#{system_update_userid}</if>
            <if test="menu_sequence != null">, menu_sequence=#{menu_sequence}</if>
        </set>
        <where>
            menu_code = #{menu_code}
        </where>
    </update>

    <select id="SELECT_JOIN_COMMON_ACCESS_GROUP_MENU_LIST" resultType="com.gicore.common.common.menu.Menu">
        WITH user_groups AS (
            SELECT DISTINCT GROUP_ID
            FROM VIMS2.COMMON_USER_GROUP
            WHERE USER_EMAIL = #{user_email}
        ),
             menu_codes AS (
                 SELECT DISTINCT MENU_CODE
                 FROM VIMS2.COMMON_ACCESS_GROUP_MENU_LIST
                 WHERE ACCESS_RIGHTS_GROUP_ID IN (SELECT GROUP_ID FROM user_groups)
             ),
             menu_hierarchy (
                             MENU_CODE,
                             MENU_NAME,
                             MENU_NUMBER,
                             MENU_LEVEL,
                             TOP_MENU_CODE,
                             URL,
                             USE_YN,
                             system_create_userid,
                             system_update_userid,
                             system_update_date,
                             system_create_date,
                             menu_sequence
                 ) AS (
                 SELECT
                     MENU_CODE,
                     MENU_NAME,
                     MENU_NUMBER,
                     MENU_LEVEL,
                     TOP_MENU_CODE,
                     URL,
                     USE_YN,
                     system_create_userid,
                     system_update_userid,
                     system_update_date,
                     system_create_date,
                     menu_sequence
                 FROM VIMS2.COMMON_MENU
                 WHERE MENU_CODE IN (SELECT MENU_CODE FROM menu_codes)
                 UNION ALL
                 SELECT
                     cm.MENU_CODE,
                     cm.MENU_NAME,
                     cm.MENU_NUMBER,
                     cm.MENU_LEVEL,
                     cm.TOP_MENU_CODE,
                     cm.URL,
                     cm.USE_YN,
                     cm.system_create_userid,
                     cm.system_update_userid,
                     cm.system_update_date,
                     cm.system_create_date,
                     cm.menu_sequence
                 FROM VIMS2.COMMON_MENU cm
                          JOIN menu_hierarchy mh ON cm.MENU_CODE = mh.TOP_MENU_CODE
                 WHERE mh.MENU_LEVEL IN ('1', '2') AND mh.TOP_MENU_CODE IS NOT NULL
             )
        SELECT DISTINCT
            MENU_CODE,
            MENU_NAME,
            MENU_NUMBER,
            MENU_LEVEL,
            TOP_MENU_CODE,
            URL,
            USE_YN,
            system_create_userid,
            system_update_userid,
            TO_CHAR(system_update_date, 'yyyy-MM-dd HH24:MI:SS') AS system_update_date,
            TO_CHAR(system_create_date, 'yyyy-MM-dd HH24:MI:SS') AS system_create_date,
            menu_sequence
        FROM menu_hierarchy
        WHERE USE_YN = '1'
        ORDER BY menu_sequence ASC, MENU_NUMBER ASC
    </select>

    <!--
    <select id="SELECT_JOIN_COMMON_ACCESS_GROUP_MENU_LIST" resultType="com.gicore.common.common.menu.Menu">
        SELECT
        rownum AS no,
        a.menu_code,
        a.menu_name,
        a.menu_number,
        a.menu_level,
        a.top_menu_code,
        a.url,
        a.use_yn,
        a.system_create_userid,
        a.system_update_userid,
        TO_DATE(TO_CHAR(a.system_update_date,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd HH24:MI:SS') AS system_update_date,
        TO_DATE(TO_CHAR(a.system_create_date,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd HH24:MI:SS') AS system_create_date
        FROM COMMON_MENU a , COMMON_ACCESS_GROUP_MENU_LIST b
        <where>
            a.menu_code = b.menu_code
            <if test="menu_code != null and menu_code != '' ">AND a.menu_code = #{menu_code}</if>
            <if test="menu_name != null and menu_name != '' ">AND a.menu_name = #{menu_name}</if>
            <if test="menu_number != null and menu_number != '' ">AND a.menu_number = #{menu_number}</if>
            <if test="menu_level != null and menu_level != '' ">AND a.menu_level = #{menu_level}</if>
            <if test="top_menu_code != null and top_menu_code != '' ">AND a.top_menu_code = #{top_menu_code}</if>
            <if test="url != null and url != '' ">AND a.url = #{url}</if>
            <if test="use_yn != null and use_yn != '' ">AND a.use_yn = #{use_yn}</if>
            <if test="system_create_userid != null and system_create_userid != '' ">AND a.system_create_userid = #{system_create_userid}</if>
            <if test="system_update_userid != null and system_update_userid != '' ">AND a.system_update_userid = #{system_update_userid}</if>
            <if test="access_rights_group_id != null and access_rights_group_id != '' ">AND b.access_rights_group_id = #{access_rights_group_id}</if>
        </where>
        ORDER BY a.menu_sequence ASC ,a.menu_number ASC
    </select>
    -->
</mapper>